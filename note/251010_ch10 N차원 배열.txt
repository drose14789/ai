2절 넘파이 배열

	2.7 기본 연산 동작
	- 배열 연산 : 요소별 연산, 행렬곱(@,dot, 단위행렬(np.eye),
		     집계함수(sum,min,max,mean,var,std)

	2.8 그 외 요소별 계산하는 범용함수들
	- 범용함수(np.add, np.multiply ,np.subtract, np.sqrt ...)
	
	2.9 브로드 케이스팅
	- 서로 다른 크기의 배열 간 연산을 수행할 수 있도록 해주는 강력한 기능
3절. 배열 합치기/분리하기
- 두배열 합치는 함수
- r_, c_
- 슬라이싱
- 하나의 배열을 여러개 작은 배열로 분리하는 함수

	3.1 두개 이상의 배열을 쌓아 합치는 함수
	- vstack(tup) : 아래로 추가하는 방식
	- hstack(tup) : 옆으로 추가하는 방식
	- dstack(tup) : 마지막 축(열)을 쌓아 합침(차원 증가)
	- column_stack(tup) : 1차원 배열을 열단위로 2차원 배열로 합침. dstack과 비교
	- row_stack(tup) : 행단위로 합침 == vstack()
	- stack(tup, axis=n) : axis=0:첫번째차원(2차원일때는 행, 3차원일때는 면), axis=-1(열)
	- 1차원 배열[:, np.newaxis] == 1차원배열.reshape(-1,1) ==
	  np.expand_dims(a, axis=1) 1차원 배열을 2차원 열백테로
	
	3.2 r_, c_
	- 나열 객체
	- r_[a,b,c] row단위로 쌓음(한행으로 합치기)
	- c_[a,b,c] column으로 쌓아서 합치기(1차원을 2차원으로)

	3.3 배열을 분리하는 함수
	- vsplit(ary, 정수나 벡터) : 첫번째 축을 따라 분할(2차원의 경우 가로축 분할)
	- hsplit(ary, 정수나 벡터) : 두번째 축을 따라 분할(2차원의 경우 세로축 분할)
	- displit(ary, 정수나 벡터) : depth를 따라 분할(3차원이상에서만 동작)
    		* 정수 n : n개로 분리
    		* [n] : n번째 인덱스를 기점으로 분리
    		* [m, n] : m번째, n번째 인덱스를 기점으로 분리
	- split(ary, 갯수나 인덱스벡터, axis=?)
	- array_split(ary, 갯수나 인덱스벡터, axis=?)
    		* axis=0 : vsplit() 동일
    		* axis=1 : hsplit() 동일
    		* axis=2 : dsplit() 동일
    	- array_split : 나눠지지 않는 정수로도 사용 가능

4절. 선형대수
- 2차원 넘파이 배열을 행렬
    * 행렬곱 : @
    * 단위행렬 : np.eye(n) : n행 n열 단위 행렬
    * 전치행렬 : X.T, X.transpose()