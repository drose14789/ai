3절. 이름(열,행) 지정하기
- 행과 열이름으로 부분 데이터 조회 : loc
- index를 이름 열로 (실행결과가 출력되서 나오면 return될뿐, member는 안 바뀜)

4절. 부분 데이터 조회

	4.1 단일 열 조회
	- 행이름으로 []로 조회할 경우 에러
	
	4.2 loc을 이용한 조회
	- df.loc[행이름,열이름] : 행이름, 열이름으로 조회
	 * 행이름과 열이름자리에 슬라이싱 from:to : from부터 to까지 (to포함)
	 * 행이름과 열이름자리에 리스트
	
	4.3 iloc을 이용한 조회
	- df.iloc[행순번,열순번] : 행순번, 열순번으로 조회
   	 * 행순번과 열순번자리에 슬라이싱 from:to:by : from부터 to앞까지 (to미포함)
   	 * 행순번과 열순번자리에 리스트

	※ 데이터 프레임의 부분 데이터 조회방법
	- df[열이름] : 특정열 조회
	- df[조건] : 조건에 맞는 모든 행 조회
	- df.loc[행이름,열이름]
    		- 행이름, 열이름 자리에 슬라이싱, 리스트
    		- 열이름 생량시 모든 열
    		- 행이름 자리에 조건
	- df.iloc[행수번,열순번]
    		- 행이름, 열이름 자리에 슬라이싱, 리스트
    		- 열이름 생량시 모든 열

5절. 데이터 삭제 및 추가
	
	5.1 데이터프레임의 요소 삭제
	- df.drp(삭제할 열이름이나 행이름, axis)
	 *axis = 0(기본값)일 때는 행 삭제, axis=1 일 때는 열삭제
	# 1) 단일 행 삭제
	# 2) 복수 행 삭제
	# 3) 열 삭제

	5.2 데이터프레임의 요소추가
	# 1) 열 추가 
	# 2) 리스트를 이용한 열 추가
	# 3) 결측치를 할당 후, 원하는 데이터에 다시 할당
	# 4) 딕셔너리로 행 추가

6절. 병합과 연결

	6.1 merge()를 이용한 데이터프레임 병합
	ex) - df1.merge(df2) # how='inner' 기본값: 내부조인(양쪽이 다 일치하는 데이터만 병합) 
	- df1.merge(df2, how='left') # 왼쪽의 df1 데이터는 모두 남기고 오른쪽 df2가 매칭되도록 함
	- df1.merge(df2, how='right') # 오른쪽의 df2 데이터는 모두 남기고 왼쪽 df1가 매칭되도록 함
	- df1.merge(df2, how='outer') 
	- df3.merge(df4, left_on='key3',right_on='key4',how='outer')

	6.2 concat()을 이용한 데이터프레임 연결
	- pd.concat([df1,df2,df3....], axis)
    	 * axis=0 (기본값) : 위아래로 연결
    	 * axis=1 : 좌우로 연결

7절. 정렬(행이름, 열이름, 값에 의한 정렬)
- df.sort_index(axis) : 행 또는 열이름으로 정렬
- df.sort_values(by=[정렬기준이 될 열이름], ascending = T/F, inplace=T/F) : 특정 열 값에 의한 정렬