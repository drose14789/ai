7장 객체지향 프로그램
1절 객체와 클래스
- 클래스 : 객체를 만들기 위한 틀(template, buleprint)
- 객체 : 클래스의 인스턴스
- 객체의 명사적 특성 : 데이터(Data), 변수(Variable), 필드(Field), 속성(Attribute)
- 객체의 동사적 특셩 : 행위(Behavior), 함수(Function), 메서드(Method), 기능(Operation)

2절. 생성자(`__init__()`)와 소멸자(`__del__`)
- 생성자 : __init__(self, [매개변수1, 매개변수2..]) - 객체가 생성될 때 자동 실행
  객체 생성시 필요한 코드(인스턴스 변수 생성과 초기화)를 포함한다
- 소멸자 : __del__(self) - 객체가 소멸될 때 자동 실행 
  객체 소멸시 필용한 코드를 포함
  인스턴스(객체)의 레퍼런스 카운트가 0이 될 때 실행
- 오버라이딩(함수의 재정의)
- 오버로딩(함수의 중복정의) python은 불가
- 생성자 함수 오버로딩 불가

3절. 변수와 메소드
- 인스턴스 변수 vs 클래스 변수 vs static 변수(정적변수)
- 인스턴스 메소드(self) vs 클래스 메소드(cls) vs static 메소드()

※ 인스턴스 메소드 vs 클래스 메소드 vs static 메소드
- 인스턴스메소드 : 첫번째 인자에 self를 꼭 명시. 객체를 통해서만 호출할 수 있는 메소드
- 클래스메소드 : 메소드 위에 @classmethod를 명시. 첫번째 인자에 class를 뜻하는 clz(cls)를 명시 
- static메소드 : 메소드 위에 @staticmethod를 명시. 디폴트 인자가 없음

4절 상속과 재정의
- 클래스 재상용
- 상속을 이용하면 부모클래스의 모든 속성을 자식클래스로 물려줄수 있음
```
class 자식클래스명(부모클래스명):
 ~~~~~~
```
- super() : "부모클래스의"를 의미

- static 변수(정적변수) : 여러 객체들 사이에 데이터를 공유하고 싶을 때 사용
